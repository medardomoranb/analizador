USING           -> using
ID              -> System
SEMICOLON       -> ;
PUBLIC          -> public
CLASS           -> class
ID              -> Estudiante
LBRACE          -> {
STRING          -> string
ID              -> nombre
ASSIGN          -> =
STRING_LITERAL  -> Lucía
SEMICOLON       -> ;
FLOAT           -> float
ID              -> nota
ASSIGN          -> =
NUMBER          -> 8.5
ID              -> f
SEMICOLON       -> ;
PUBLIC          -> public
VOID            -> void
ID              -> MostrarDatos
LPAREN          -> (
RPAREN          -> )
LBRACE          -> {
ID              -> Console
DOT             -> .
ID              -> WriteLine
LPAREN          -> (
STRING_LITERAL  -> Nombre: 
PLUS            -> +
ID              -> nombre
RPAREN          -> )
SEMICOLON       -> ;
ID              -> Console
DOT             -> .
ID              -> WriteLine
LPAREN          -> (
STRING_LITERAL  -> Nota: 
PLUS            -> +
ID              -> nota
RPAREN          -> )
SEMICOLON       -> ;
IF              -> if
LPAREN          -> (
ID              -> nota
GE              -> >=
NUMBER          -> 6
RPAREN          -> )
LBRACE          -> {
ID              -> Console
DOT             -> .
ID              -> WriteLine
LPAREN          -> (
STRING_LITERAL  -> Ha aprobado el curso.
RPAREN          -> )
SEMICOLON       -> ;
RBRACE          -> }
ELSE            -> else
LBRACE          -> {
ID              -> Console
DOT             -> .
ID              -> WriteLine
LPAREN          -> (
STRING_LITERAL  -> No ha aprobado el curso.
RPAREN          -> )
SEMICOLON       -> ;
RBRACE          -> }
RBRACE          -> }
PUBLIC          -> public
BOOL            -> bool
ID              -> EstaAprobado
LPAREN          -> (
RPAREN          -> )
LBRACE          -> {
RETURN          -> return
ID              -> nota
GE              -> >=
NUMBER          -> 7
SEMICOLON       -> ;
RBRACE          -> }
PUBLIC          -> public
STATIC          -> static
VOID            -> void
ID              -> Main
LPAREN          -> (
STRING          -> string
LBRACKET        -> [
RBRACKET        -> ]
ID              -> args
RPAREN          -> )
LBRACE          -> {
ID              -> Estudiante
ID              -> estudiante
ASSIGN          -> =
NEW             -> new
ID              -> Estudiante
LPAREN          -> (
RPAREN          -> )
SEMICOLON       -> ;
ID              -> estudiante
DOT             -> .
ID              -> MostrarDatos
LPAREN          -> (
RPAREN          -> )
SEMICOLON       -> ;
BOOL            -> bool
ID              -> aprobado
ASSIGN          -> =
ID              -> estudiante
DOT             -> .
ID              -> EstaAprobado
LPAREN          -> (
RPAREN          -> )
SEMICOLON       -> ;
ID              -> Console
DOT             -> .
ID              -> WriteLine
LPAREN          -> (
STRING_LITERAL  -> ¿Aprobado?: 
PLUS            -> +
ID              -> aprobado
RPAREN          -> )
SEMICOLON       -> ;
RBRACE          -> }
RBRACE          -> }