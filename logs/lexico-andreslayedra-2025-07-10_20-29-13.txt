USING           -> using
IDENTIFICADOR   -> System
PUNTO_COMA      -> ;
PUBLIC          -> public
CLASS           -> class
NOMBRE_CLASE    -> Producto
LLAVE_IZQ       -> {
STRING          -> string
IDENTIFICADOR   -> nombre
ASIGNACION      -> =
VALOR_STRING    -> Mouse inalámbrico
PUNTO_COMA      -> ;
FLOAT           -> float
IDENTIFICADOR   -> precio
ASIGNACION      -> =
VALOR_FLOTANTE  -> 19.99
PUNTO_COMA      -> ;
INT             -> int
IDENTIFICADOR   -> stock
ASIGNACION      -> =
VALOR_ENTERO    -> 12
PUNTO_COMA      -> ;
PUBLIC          -> public
VOID            -> void
IDENTIFICADOR   -> MostrarInfo
PARENTESIS_IZQ  -> (
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Producto: 
MAS             -> +
IDENTIFICADOR   -> nombre
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Precio: $
MAS             -> +
IDENTIFICADOR   -> precio
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Stock disponible: 
MAS             -> +
IDENTIFICADOR   -> stock
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
IF              -> if
PARENTESIS_IZQ  -> (
IDENTIFICADOR   -> stock
MAYOR           -> >
VALOR_ENTERO    -> 0
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Producto en inventario.
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
LLAVE_DER       -> }
ELSE            -> else
LLAVE_IZQ       -> {
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Producto agotado.
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
LLAVE_DER       -> }
IF              -> if
PARENTESIS_IZQ  -> (
IDENTIFICADOR   -> precio
MAYOR_IGUAL     -> >=
VALOR_ENTERO    -> 15
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Precio válido para la venta.
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
LLAVE_DER       -> }
ELSE            -> else
LLAVE_IZQ       -> {
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Precio demasiado bajo, revisar margen de ganancia.
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
LLAVE_DER       -> }
LLAVE_DER       -> }
PUBLIC          -> public
BOOL            -> bool
IDENTIFICADOR   -> DisponibleParaVenta
PARENTESIS_IZQ  -> (
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
IF              -> if
PARENTESIS_IZQ  -> (
IDENTIFICADOR   -> stock
MAYOR           -> >
VALOR_ENTERO    -> 0
CONJUNCION      -> &&
IDENTIFICADOR   -> precio
MAYOR_IGUAL     -> >=
VALOR_ENTERO    -> 15
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
RETURN          -> return
VALOR_BOOLEANO  -> true
PUNTO_COMA      -> ;
LLAVE_DER       -> }
RETURN          -> return
VALOR_BOOLEANO  -> false
PUNTO_COMA      -> ;
LLAVE_DER       -> }
PUBLIC          -> public
ENUM            -> enum
IDENTIFICADOR   -> Categoria
LLAVE_IZQ       -> {
IDENTIFICADOR   -> Electronica
COMA            -> ,
IDENTIFICADOR   -> Oficina
COMA            -> ,
IDENTIFICADOR   -> Hogar
LLAVE_DER       -> }
PUBLIC          -> public
STRUCT          -> struct
IDENTIFICADOR   -> Garantia
LLAVE_IZQ       -> {
PUBLIC          -> public
INT             -> int
IDENTIFICADOR   -> anios
PUNTO_COMA      -> ;
PUBLIC          -> public
BOOL            -> bool
IDENTIFICADOR   -> incluyeDanios
PUNTO_COMA      -> ;
LLAVE_DER       -> }
LLAVE_DER       -> }
PUBLIC          -> public
CLASS           -> class
NOMBRE_CLASE    -> Inventario
LLAVE_IZQ       -> {
PUBLIC          -> public
VOID            -> void
IDENTIFICADOR   -> ClasificarProducto
PARENTESIS_IZQ  -> (
INT             -> int
IDENTIFICADOR   -> codigo
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
SWITCH          -> switch
PARENTESIS_IZQ  -> (
IDENTIFICADOR   -> codigo
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
CASE            -> case
VALOR_ENTERO    -> 100
DOS_PUNTOS      -> :
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Producto clasificado como: Electrónica
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
BREAK           -> break
PUNTO_COMA      -> ;
CASE            -> case
VALOR_ENTERO    -> 200
DOS_PUNTOS      -> :
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Producto clasificado como: Oficina
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
BREAK           -> break
PUNTO_COMA      -> ;
CASE            -> case
VALOR_ENTERO    -> 300
DOS_PUNTOS      -> :
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Producto clasificado como: Hogar
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
BREAK           -> break
PUNTO_COMA      -> ;
DEFAULT         -> default
DOS_PUNTOS      -> :
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Código no reconocido.
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
BREAK           -> break
PUNTO_COMA      -> ;
LLAVE_DER       -> }
LLAVE_DER       -> }
PUBLIC          -> public
VOID            -> void
IDENTIFICADOR   -> MostrarCiclo
PARENTESIS_IZQ  -> (
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
FOR             -> for
PARENTESIS_IZQ  -> (
INT             -> int
IDENTIFICADOR   -> i
ASIGNACION      -> =
VALOR_ENTERO    -> 1
PUNTO_COMA      -> ;
IDENTIFICADOR   -> i
MENOR_IGUAL     -> <=
VALOR_ENTERO    -> 3
PUNTO_COMA      -> ;
IDENTIFICADOR   -> i
INCREMENTO      -> ++
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
IF              -> if
PARENTESIS_IZQ  -> (
IDENTIFICADOR   -> i
IGUAL           -> ==
VALOR_ENTERO    -> 2
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
CONTINUE        -> continue
PUNTO_COMA      -> ;
LLAVE_DER       -> }
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Iteración número: 
MAS             -> +
IDENTIFICADOR   -> i
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
IF              -> if
PARENTESIS_IZQ  -> (
IDENTIFICADOR   -> i
IGUAL           -> ==
VALOR_ENTERO    -> 3
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
BREAK           -> break
PUNTO_COMA      -> ;
LLAVE_DER       -> }
LLAVE_DER       -> }
LLAVE_DER       -> }
PUBLIC          -> public
VOID            -> void
IDENTIFICADOR   -> MostrarCaracteres
PARENTESIS_IZQ  -> (
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
CHAR            -> char
IDENTIFICADOR   -> inicial
ASIGNACION      -> =
VALOR_CHAR      -> M
PUNTO_COMA      -> ;
CHAR            -> char
IDENTIFICADOR   -> final
ASIGNACION      -> =
VALOR_CHAR      -> Z
PUNTO_COMA      -> ;
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Inicial: 
MAS             -> +
IDENTIFICADOR   -> inicial
MAS             -> +
VALOR_STRING    -> , Final: 
MAS             -> +
IDENTIFICADOR   -> final
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
LLAVE_DER       -> }
LLAVE_DER       -> }
COMENTARIO_UNA_LINEA -> // comentario
PUBLIC          -> public
CLASS           -> class
NOMBRE_CLASE    -> DiagnosticoInventario
LLAVE_IZQ       -> {
PUBLIC          -> public
VOID            -> void
IDENTIFICADOR   -> EjecutarAnalisis
PARENTESIS_IZQ  -> (
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
FLOAT           -> float
IDENTIFICADOR   -> temperaturaAlmacen
ASIGNACION      -> =
VALOR_FLOTANTE  -> 22.5
PUNTO_COMA      -> ;
BOOL            -> bool
IDENTIFICADOR   -> productoActivo
ASIGNACION      -> =
VALOR_BOOLEANO  -> true
PUNTO_COMA      -> ;
STRING          -> string
IDENTIFICADOR   -> fechaRegistro
ASIGNACION      -> =
VALOR_STRING    -> 2025-06-14
PUNTO_COMA      -> ;
INT             -> int
IDENTIFICADOR   -> codigoHex
ASIGNACION      -> =
VALOR_ENTERO    -> 0
IDENTIFICADOR   -> x1F4
PUNTO_COMA      -> ;
INT             -> int
IDENTIFICADOR   -> codigoBin
ASIGNACION      -> =
VALOR_ENTERO    -> 0
IDENTIFICADOR   -> b1010
PUNTO_COMA      -> ;
IF              -> if
PARENTESIS_IZQ  -> (
IDENTIFICADOR   -> productoActivo
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Diagnóstico: Producto activo registrado el 
MAS             -> +
IDENTIFICADOR   -> fechaRegistro
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Código Hex: 
MAS             -> +
IDENTIFICADOR   -> codigoHex
MAS             -> +
VALOR_STRING    -> , Binario: 
MAS             -> +
IDENTIFICADOR   -> codigoBin
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Temperatura del almacén: 
MAS             -> +
IDENTIFICADOR   -> temperaturaAlmacen
MAS             -> +
VALOR_STRING    -> °C
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
LLAVE_DER       -> }
ELSE            -> else
LLAVE_IZQ       -> {
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Producto inactivo.
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
LLAVE_DER       -> }
LLAVE_DER       -> }
PUBLIC          -> public
VOID            -> void
IDENTIFICADOR   -> MostrarMensaje
PARENTESIS_IZQ  -> (
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> Listo para la venta
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
LLAVE_DER       -> }
LLAVE_DER       -> }
PUBLIC          -> public
CLASS           -> class
NOMBRE_CLASE    -> Programa
LLAVE_IZQ       -> {
PUBLIC          -> public
STATIC          -> static
VOID            -> void
MAIN            -> Main
PARENTESIS_IZQ  -> (
STRING          -> string
CORCHETE_IZQ    -> [
CORCHETE_DER    -> ]
ARGS            -> args
PARENTESIS_DER  -> )
LLAVE_IZQ       -> {
IDENTIFICADOR   -> Producto
IDENTIFICADOR   -> p
ASIGNACION      -> =
NEW             -> new
IDENTIFICADOR   -> Producto
PARENTESIS_IZQ  -> (
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
IDENTIFICADOR   -> p
PUNTO           -> .
IDENTIFICADOR   -> MostrarInfo
PARENTESIS_IZQ  -> (
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
BOOL            -> bool
IDENTIFICADOR   -> puedeVenderse
ASIGNACION      -> =
IDENTIFICADOR   -> p
PUNTO           -> .
IDENTIFICADOR   -> DisponibleParaVenta
PARENTESIS_IZQ  -> (
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
CONSOLE         -> Console
PUNTO           -> .
WRITELINE       -> WriteLine
PARENTESIS_IZQ  -> (
VALOR_STRING    -> ¿Disponible para la venta?: 
MAS             -> +
IDENTIFICADOR   -> puedeVenderse
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
IDENTIFICADOR   -> DiagnosticoInventario
IDENTIFICADOR   -> d
ASIGNACION      -> =
NEW             -> new
IDENTIFICADOR   -> DiagnosticoInventario
PARENTESIS_IZQ  -> (
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
IDENTIFICADOR   -> d
PUNTO           -> .
IDENTIFICADOR   -> EjecutarAnalisis
PARENTESIS_IZQ  -> (
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
IDENTIFICADOR   -> d
PUNTO           -> .
IDENTIFICADOR   -> MostrarMensaje
PARENTESIS_IZQ  -> (
PARENTESIS_DER  -> )
PUNTO_COMA      -> ;
LLAVE_DER       -> }
LLAVE_DER       -> }