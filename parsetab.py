
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARROW AS ASSIGN BASE BIN_LITERAL BITAND BITNOT BITOR BITXOR BOOL BREAK BYTE CASE CATCH CHAR CHAR_LITERAL CHECKED CLASS CLASS_NAME COLON COMMA CONST CONTINUE DATE_LITERAL DECIMAL DECIMAL_LITERAL DECREMENT DEFAULT DELEGATE DIVIDE DIVIDE_ASSIGN DO DOT DOUBLE ELSE ENUM EQUALS EVENT EXPLICIT EXTERN FALSE_LITERAL FINALLY FIXED FLOAT FLOAT_LITERAL FOR FOREACH GE GOTO GT HEX_LITERAL ID IF IMPLICIT IN INCREMENT INT INTERFACE INTERNAL IS LBRACE LBRACKET LE LOCK LONG LPAREN LSHIFT LT MINUS MINUS_ASSIGN MOD MOD_ASSIGN NAMESPACE NEW NOT NOTEQUAL NULL NUMBER OBJECT OPERATOR OR OUT OVERRIDE PARAMS PLUS PLUS_ASSIGN PRIVATE PROTECTED PUBLIC QUESTION RBRACE RBRACKET READONLY REF RETURN RPAREN RSHIFT SBYTE SEALED SEMICOLON SHORT SIZEOF STACKALLOC STATIC STRING STRING_LITERAL STRUCT SWITCH THIS THROW TIMES TIMES_ASSIGN TRUE_LITERAL TRY TYPEOF UINT ULONG UNCHECKED UNSAFE USHORT USING VIRTUAL VOID VOLATILE WHILE XML_COMMENTprogram : using_list elementos_programa\n               | using_list XML_COMMENT elementos_programaelementos_programa : clase\n                          | enum_decl\n                          | struct_decl\n                          | elementos_programa clase\n                          | elementos_programa enum_decl\n                          | elementos_programa struct_decl\n                          | elementos_programa XML_COMMENTusing_list : using\n                  | using_list using\n                  | emptyusing : USING ID SEMICOLONclase_list : clase\n                  | clase_list clasemodificador : lista_modificadores\n                   | emptylista_modificadores : modificador_simple\n                           | lista_modificadores modificador_simplemodificador_simple : PUBLIC\n                          | PRIVATE\n                          | PROTECTED\n                          | STATICclase : modificador CLASS CLASS_NAME LBRACE cuerpo_clase RBRACE\n             | XML_COMMENT modificador CLASS CLASS_NAME LBRACE cuerpo_clase RBRACEcuerpo_clase : propiedad\n                    | metodo\n                    | enum_decl\n                    | struct_decl\n                    | clase\n                    | cuerpo_clase propiedad\n                    | cuerpo_clase metodo\n                    | cuerpo_clase enum_decl\n                    | cuerpo_clase struct_decl\n                    | cuerpo_clase clase\n                    | cuerpo_clase XML_COMMENT\n                    | XML_COMMENTpropiedad : modificador tipo ID ASSIGN expresion SEMICOLON\n                 | modificador tipo ID SEMICOLON\n                 | tipo ID ASSIGN expresion SEMICOLON\n                 | tipo ID SEMICOLON\n                 | XML_COMMENT tipo ID ASSIGN expresion SEMICOLON\n                 | XML_COMMENT tipo ID SEMICOLONmetodo : modificador tipo_main ID LPAREN parametros_main RPAREN LBRACE instrucciones RBRACEtipo_main : VOIDparametros_main : tipo LBRACKET RBRACKET IDmetodo : modificador tipo ID LPAREN parametros RPAREN LBRACE instrucciones RBRACE\n              | modificador tipo ID LPAREN tipo LBRACKET RBRACKET ID RPAREN LBRACE instrucciones RBRACE\n              | XML_COMMENT modificador tipo ID LPAREN parametros RPAREN LBRACE instrucciones RBRACE\n              | XML_COMMENT modificador tipo ID LPAREN tipo LBRACKET RBRACKET ID RPAREN LBRACE instrucciones RBRACEparametros : parametro\n                  | parametros COMMA parametro\n                  | XML_COMMENT parametros\n                  | emptyparametro : tipo ID\n                 | tipo LBRACKET RBRACKET ID\n                 | tipo ID ASSIGN expresion\n                 | tipo LBRACKET RBRACKET ID ASSIGN expresion\n                 | XML_COMMENT tipo ID\n                 | XML_COMMENT tipo ID ASSIGN expresioninstrucciones : instruccion\n                     | instrucciones instruccion\n                     | emptyinstruccion : impresion  \n                   | llamada\n                   | lectura\n                   | asignacion\n                   | control\n                   | instruccion_return\n                   | XML_COMMENT\n                   | propiedadimpresion : ID DOT ID LPAREN expresion RPAREN SEMICOLON\n                 | ID DOT ID LPAREN lista_expresiones RPAREN SEMICOLONlista_expresiones : expresion\n                         | lista_expresiones COMMA expresionlectura : ID DOT ID LPAREN RPAREN SEMICOLONasignacion : tipo ID ASSIGN expresion SEMICOLON\n                  | tipo ID ASSIGN NEW ID LPAREN RPAREN SEMICOLONinstruccion_return : RETURN expresion SEMICOLONexpresion : expresion PLUS expresion\n                 | expresion MINUS expresion\n                 | expresion TIMES expresion\n                 | expresion DIVIDE expresion\n                 | DATE_LITERAL\n                 | DECIMAL_LITERAL\n                 | HEX_LITERAL\n                 | BIN_LITERAL\n                 | NUMBER\n                 | FLOAT_LITERAL\n                 | ID\n                 | STRING_LITERAL\n                 | TRUE_LITERAL\n                 | FALSE_LITERAL\n                 | CHAR_LITERALexpresion : ID INCREMENT\n                 | ID DECREMENTcondicion : expresion GT expresion\n                 | expresion LT expresion\n                 | expresion GE expresion\n                 | expresion LE expresion\n                 | expresion EQUALS expresion\n                 | expresion NOTEQUAL expresion\n                 | condicion AND condicion\n                 | condicion OR condicioncontrol : IF LPAREN condicion RPAREN LBRACE instrucciones RBRACE\n               | IF LPAREN condicion RPAREN LBRACE instrucciones RBRACE ELSE LBRACE instrucciones RBRACEenum_decl : modificador ENUM ID LBRACE lista_identificadores RBRACElista_identificadores : ID\n                             | lista_identificadores COMMA IDstruct_decl : modificador STRUCT ID LBRACE cuerpo_clase RBRACEllamada : ID DOT ID LPAREN lista_expresiones RPAREN SEMICOLON\n               | ID DOT ID LPAREN RPAREN SEMICOLONcontrol : SWITCH LPAREN expresion RPAREN LBRACE lista_casos default_case RBRACElista_casos : lista_casos caso\n                   | casocaso : CASE expresion COLON instrucciones BREAK SEMICOLONdefault_case : DEFAULT COLON instrucciones BREAK SEMICOLON\n                    | emptycontrol : FOR LPAREN tipo ID ASSIGN expresion SEMICOLON condicion SEMICOLON expresion RPAREN LBRACE instrucciones RBRACEinstruccion : CONTINUE SEMICOLONinstruccion : BREAK SEMICOLONtipo : INT\n            | FLOAT\n            | STRING\n            | CHAR\n            | BOOL\n            | VOID\n            | IDempty :'
    
_lr_action_items = {'USING':([0,2,3,4,8,32,],[5,5,-10,-12,-11,-13,]),'XML_COMMENT':([0,2,3,4,6,7,8,9,10,11,21,22,23,24,26,32,40,42,44,46,47,48,49,50,51,52,63,64,65,69,70,71,72,73,74,75,79,81,82,83,89,91,93,94,97,115,120,123,128,132,137,146,152,161,162,163,164,165,166,167,168,169,170,171,181,184,190,191,192,193,201,203,204,213,216,217,233,234,235,240,251,254,257,262,264,265,267,274,276,277,278,280,281,282,284,288,289,290,292,293,294,],[-129,7,-10,-12,24,25,-11,-3,-4,-5,-6,-7,-8,-9,24,-13,52,52,52,75,-26,-27,-28,-29,-30,-37,75,52,75,-24,-31,-32,-33,-34,-35,-36,-107,-110,75,-24,-41,-25,-39,115,-43,115,115,-40,-38,149,-42,170,170,170,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,170,170,-47,-62,-120,-121,-44,170,170,-79,-49,170,170,-48,-40,170,170,-76,170,-50,-72,-73,-105,-78,-113,170,170,170,170,170,170,-106,-121,-121,170,170,-119,]),'PUBLIC':([0,2,3,4,6,7,8,9,10,11,13,15,16,17,18,19,21,22,23,24,25,26,31,32,40,42,44,46,47,48,49,50,51,52,63,64,65,69,70,71,72,73,74,75,79,81,82,83,89,91,93,97,123,128,137,146,152,161,162,163,164,165,166,167,168,169,170,171,181,184,190,191,192,193,201,203,204,213,216,217,233,234,235,240,251,254,257,262,264,265,267,274,276,277,278,280,281,282,284,288,289,290,292,293,294,],[-129,16,-10,-12,16,16,-11,-3,-4,-5,16,-18,-20,-21,-22,-23,-6,-7,-8,16,16,16,-19,-13,16,16,16,16,-26,-27,-28,-29,-30,16,16,16,16,-24,-31,-32,-33,-34,-35,16,-107,-110,16,-24,-41,-25,-39,-43,-40,-38,-42,16,16,16,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,16,16,-47,-62,-120,-121,-44,16,16,-79,-49,16,16,-48,-40,16,16,-76,16,-50,-72,-73,-105,-78,-113,16,16,16,16,16,16,-106,-121,-121,16,16,-119,]),'PRIVATE':([0,2,3,4,6,7,8,9,10,11,13,15,16,17,18,19,21,22,23,24,25,26,31,32,40,42,44,46,47,48,49,50,51,52,63,64,65,69,70,71,72,73,74,75,79,81,82,83,89,91,93,97,123,128,137,146,152,161,162,163,164,165,166,167,168,169,170,171,181,184,190,191,192,193,201,203,204,213,216,217,233,234,235,240,251,254,257,262,264,265,267,274,276,277,278,280,281,282,284,288,289,290,292,293,294,],[-129,17,-10,-12,17,17,-11,-3,-4,-5,17,-18,-20,-21,-22,-23,-6,-7,-8,17,17,17,-19,-13,17,17,17,17,-26,-27,-28,-29,-30,17,17,17,17,-24,-31,-32,-33,-34,-35,17,-107,-110,17,-24,-41,-25,-39,-43,-40,-38,-42,17,17,17,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,17,17,-47,-62,-120,-121,-44,17,17,-79,-49,17,17,-48,-40,17,17,-76,17,-50,-72,-73,-105,-78,-113,17,17,17,17,17,17,-106,-121,-121,17,17,-119,]),'PROTECTED':([0,2,3,4,6,7,8,9,10,11,13,15,16,17,18,19,21,22,23,24,25,26,31,32,40,42,44,46,47,48,49,50,51,52,63,64,65,69,70,71,72,73,74,75,79,81,82,83,89,91,93,97,123,128,137,146,152,161,162,163,164,165,166,167,168,169,170,171,181,184,190,191,192,193,201,203,204,213,216,217,233,234,235,240,251,254,257,262,264,265,267,274,276,277,278,280,281,282,284,288,289,290,292,293,294,],[-129,18,-10,-12,18,18,-11,-3,-4,-5,18,-18,-20,-21,-22,-23,-6,-7,-8,18,18,18,-19,-13,18,18,18,18,-26,-27,-28,-29,-30,18,18,18,18,-24,-31,-32,-33,-34,-35,18,-107,-110,18,-24,-41,-25,-39,-43,-40,-38,-42,18,18,18,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,18,18,-47,-62,-120,-121,-44,18,18,-79,-49,18,18,-48,-40,18,18,-76,18,-50,-72,-73,-105,-78,-113,18,18,18,18,18,18,-106,-121,-121,18,18,-119,]),'STATIC':([0,2,3,4,6,7,8,9,10,11,13,15,16,17,18,19,21,22,23,24,25,26,31,32,40,42,44,46,47,48,49,50,51,52,63,64,65,69,70,71,72,73,74,75,79,81,82,83,89,91,93,97,123,128,137,146,152,161,162,163,164,165,166,167,168,169,170,171,181,184,190,191,192,193,201,203,204,213,216,217,233,234,235,240,251,254,257,262,264,265,267,274,276,277,278,280,281,282,284,288,289,290,292,293,294,],[-129,19,-10,-12,19,19,-11,-3,-4,-5,19,-18,-20,-21,-22,-23,-6,-7,-8,19,19,19,-19,-13,19,19,19,19,-26,-27,-28,-29,-30,19,19,19,19,-24,-31,-32,-33,-34,-35,19,-107,-110,19,-24,-41,-25,-39,-43,-40,-38,-42,19,19,19,-61,-63,-64,-65,-66,-67,-68,-69,-70,-71,19,19,-47,-62,-120,-121,-44,19,19,-79,-49,19,19,-48,-40,19,19,-76,19,-50,-72,-73,-105,-78,-113,19,19,19,19,19,19,-106,-121,-121,19,19,-119,]),'CLASS':([0,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,31,32,33,40,42,44,45,46,47,48,49,50,51,52,63,64,65,69,70,71,72,73,74,75,77,79,81,82,83,89,91,93,97,123,128,137,190,201,216,234,262,],[-129,-129,-10,-12,-129,-129,-11,-3,-4,-5,28,-16,-17,-18,-20,-21,-22,-23,-6,-7,-8,-9,-129,-129,34,-19,-13,38,-129,-129,-129,28,-129,-26,-27,-28,-29,-30,-37,-129,-129,-129,-24,-31,-32,-33,-34,-35,-36,38,-107,-110,-129,-24,-41,-25,-39,-43,-40,-38,-42,-47,-44,-49,-48,-50,]),'ENUM':([0,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,26,27,31,32,40,42,44,45,46,47,48,49,50,51,52,63,64,65,69,70,71,72,73,74,75,79,81,82,83,89,91,93,97,123,128,137,190,201,216,234,262,],[-129,-129,-10,-12,-129,-129,-11,-3,-4,-5,29,-16,-17,-18,-20,-21,-22,-23,-6,-7,-8,-9,-129,29,-19,-13,-129,-129,-129,29,-129,-26,-27,-28,-29,-30,-37,-129,-129,-129,-24,-31,-32,-33,-34,-35,-36,-107,-110,-129,-24,-41,-25,-39,-43,-40,-38,-42,-47,-44,-49,-48,-50,]),'STRUCT':([0,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,26,27,31,32,40,42,44,45,46,47,48,49,50,51,52,63,64,65,69,70,71,72,73,74,75,79,81,82,83,89,91,93,97,123,128,137,190,201,216,234,262,],[-129,-129,-10,-12,-129,-129,-11,-3,-4,-5,30,-16,-17,-18,-20,-21,-22,-23,-6,-7,-8,-9,-129,30,-19,-13,-129,-129,-129,30,-129,-26,-27,-28,-29,-30,-37,-129,-129,-129,-24,-31,-32,-33,-34,-35,-36,-107,-110,-129,-24,-41,-25,-39,-43,-40,-38,-42,-47,-44,-49,-48,-50,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'using_list':([0,],[2,]),'using':([0,2,],[3,8,]),'empty':([0,2,6,7,24,25,26,40,42,44,46,52,63,64,65,75,82,94,115,120,146,152,161,181,184,203,204,217,233,240,251,257,258,277,278,280,281,282,284,292,293,],[4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,116,116,116,163,163,14,14,163,14,163,14,163,163,14,14,271,163,163,163,14,14,14,163,14,]),'elementos_programa':([2,7,],[6,26,]),'clase':([2,6,7,26,40,42,44,46,63,64,65,82,],[9,21,9,21,51,51,51,74,74,51,74,74,]),'enum_decl':([2,6,7,26,40,42,44,46,63,64,65,82,],[10,22,10,22,49,49,49,72,72,49,72,72,]),'struct_decl':([2,6,7,26,40,42,44,46,63,64,65,82,],[11,23,11,23,50,50,50,73,73,50,73,73,]),'modificador':([2,6,7,24,25,26,40,42,44,46,52,63,64,65,75,82,146,152,161,181,184,203,204,217,233,240,251,257,277,278,280,281,282,284,292,293,],[12,12,27,33,33,12,45,45,45,45,77,45,45,45,77,45,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'lista_modificadores':([2,6,7,24,25,26,40,42,44,46,52,63,64,65,75,82,146,152,161,181,184,203,204,217,233,240,251,257,277,278,280,281,282,284,292,293,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'modificador_simple':([2,6,7,13,24,25,26,40,42,44,46,52,63,64,65,75,82,146,152,161,181,184,203,204,217,233,240,251,257,277,278,280,281,282,284,292,293,],[15,15,15,31,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'cuerpo_clase':([40,42,44,64,],[46,63,65,82,]),'propiedad':([40,42,44,46,63,64,65,82,146,152,161,181,184,203,204,217,233,240,251,257,277,278,280,281,282,284,292,293,],[47,47,47,70,70,47,70,70,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'metodo':([40,42,44,46,63,64,65,82,],[48,48,48,71,71,48,71,71,]),'tipo':([40,42,44,45,46,52,63,64,65,75,77,82,94,95,115,120,132,146,149,152,158,161,170,181,184,196,203,204,217,233,240,251,257,277,278,280,281,282,284,292,293,],[53,53,53,66,53,76,53,53,53,76,87,53,112,118,134,138,148,159,178,159,187,159,76,159,159,212,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'lista_identificadores':([41,],[62,]),'tipo_main':([45,],[67,]),'expresion':([88,92,96,124,125,126,127,144,177,179,186,194,195,207,214,220,222,223,224,225,226,227,228,229,250,256,260,273,283,],[100,111,119,140,141,142,143,156,197,199,205,210,211,218,232,237,210,210,243,244,245,246,247,248,261,266,272,210,287,]),'parametros':([94,115,120,],[113,133,139,]),'parametro':([94,115,120,132,],[114,114,114,147,]),'parametros_main':([95,],[117,]),'instrucciones':([146,152,184,204,233,240,277,278,280,292,],[161,181,203,217,251,257,281,282,284,293,]),'instruccion':([146,152,161,181,184,203,204,217,233,240,251,257,277,278,280,281,282,284,292,293,],[162,162,191,191,162,191,162,191,162,162,191,191,162,162,162,191,191,191,162,191,]),'impresion':([146,152,161,181,184,203,204,217,233,240,251,257,277,278,280,281,282,284,292,293,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'llamada':([146,152,161,181,184,203,204,217,233,240,251,257,277,278,280,281,282,284,292,293,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'lectura':([146,152,161,181,184,203,204,217,233,240,251,257,277,278,280,281,282,284,292,293,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'asignacion':([146,152,161,181,184,203,204,217,233,240,251,257,277,278,280,281,282,284,292,293,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'control':([146,152,161,181,184,203,204,217,233,240,251,257,277,278,280,281,282,284,292,293,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'instruccion_return':([146,152,161,181,184,203,204,217,233,240,251,257,277,278,280,281,282,284,292,293,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'condicion':([194,222,223,273,],[209,241,242,279,]),'lista_expresiones':([220,],[239,]),'lista_casos':([249,],[258,]),'caso':([249,258,],[259,269,]),'default_case':([258,],[268,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> using_list elementos_programa','program',2,'p_program','yacc.py',19),
  ('program -> using_list XML_COMMENT elementos_programa','program',3,'p_program','yacc.py',20),
  ('elementos_programa -> clase','elementos_programa',1,'p_elementos_programa','yacc.py',25),
  ('elementos_programa -> enum_decl','elementos_programa',1,'p_elementos_programa','yacc.py',26),
  ('elementos_programa -> struct_decl','elementos_programa',1,'p_elementos_programa','yacc.py',27),
  ('elementos_programa -> elementos_programa clase','elementos_programa',2,'p_elementos_programa','yacc.py',28),
  ('elementos_programa -> elementos_programa enum_decl','elementos_programa',2,'p_elementos_programa','yacc.py',29),
  ('elementos_programa -> elementos_programa struct_decl','elementos_programa',2,'p_elementos_programa','yacc.py',30),
  ('elementos_programa -> elementos_programa XML_COMMENT','elementos_programa',2,'p_elementos_programa','yacc.py',31),
  ('using_list -> using','using_list',1,'p_using_list','yacc.py',38),
  ('using_list -> using_list using','using_list',2,'p_using_list','yacc.py',39),
  ('using_list -> empty','using_list',1,'p_using_list','yacc.py',40),
  ('using -> USING ID SEMICOLON','using',3,'p_using','yacc.py',44),
  ('clase_list -> clase','clase_list',1,'p_clase_list','yacc.py',48),
  ('clase_list -> clase_list clase','clase_list',2,'p_clase_list','yacc.py',49),
  ('modificador -> lista_modificadores','modificador',1,'p_modificador','yacc.py',53),
  ('modificador -> empty','modificador',1,'p_modificador','yacc.py',54),
  ('lista_modificadores -> modificador_simple','lista_modificadores',1,'p_lista_modificadores','yacc.py',58),
  ('lista_modificadores -> lista_modificadores modificador_simple','lista_modificadores',2,'p_lista_modificadores','yacc.py',59),
  ('modificador_simple -> PUBLIC','modificador_simple',1,'p_modificador_simple','yacc.py',63),
  ('modificador_simple -> PRIVATE','modificador_simple',1,'p_modificador_simple','yacc.py',64),
  ('modificador_simple -> PROTECTED','modificador_simple',1,'p_modificador_simple','yacc.py',65),
  ('modificador_simple -> STATIC','modificador_simple',1,'p_modificador_simple','yacc.py',66),
  ('clase -> modificador CLASS CLASS_NAME LBRACE cuerpo_clase RBRACE','clase',6,'p_clase','yacc.py',71),
  ('clase -> XML_COMMENT modificador CLASS CLASS_NAME LBRACE cuerpo_clase RBRACE','clase',7,'p_clase','yacc.py',72),
  ('cuerpo_clase -> propiedad','cuerpo_clase',1,'p_cuerpo_clase','yacc.py',78),
  ('cuerpo_clase -> metodo','cuerpo_clase',1,'p_cuerpo_clase','yacc.py',79),
  ('cuerpo_clase -> enum_decl','cuerpo_clase',1,'p_cuerpo_clase','yacc.py',80),
  ('cuerpo_clase -> struct_decl','cuerpo_clase',1,'p_cuerpo_clase','yacc.py',81),
  ('cuerpo_clase -> clase','cuerpo_clase',1,'p_cuerpo_clase','yacc.py',82),
  ('cuerpo_clase -> cuerpo_clase propiedad','cuerpo_clase',2,'p_cuerpo_clase','yacc.py',83),
  ('cuerpo_clase -> cuerpo_clase metodo','cuerpo_clase',2,'p_cuerpo_clase','yacc.py',84),
  ('cuerpo_clase -> cuerpo_clase enum_decl','cuerpo_clase',2,'p_cuerpo_clase','yacc.py',85),
  ('cuerpo_clase -> cuerpo_clase struct_decl','cuerpo_clase',2,'p_cuerpo_clase','yacc.py',86),
  ('cuerpo_clase -> cuerpo_clase clase','cuerpo_clase',2,'p_cuerpo_clase','yacc.py',87),
  ('cuerpo_clase -> cuerpo_clase XML_COMMENT','cuerpo_clase',2,'p_cuerpo_clase','yacc.py',88),
  ('cuerpo_clase -> XML_COMMENT','cuerpo_clase',1,'p_cuerpo_clase','yacc.py',89),
  ('propiedad -> modificador tipo ID ASSIGN expresion SEMICOLON','propiedad',6,'p_propiedad','yacc.py',94),
  ('propiedad -> modificador tipo ID SEMICOLON','propiedad',4,'p_propiedad','yacc.py',95),
  ('propiedad -> tipo ID ASSIGN expresion SEMICOLON','propiedad',5,'p_propiedad','yacc.py',96),
  ('propiedad -> tipo ID SEMICOLON','propiedad',3,'p_propiedad','yacc.py',97),
  ('propiedad -> XML_COMMENT tipo ID ASSIGN expresion SEMICOLON','propiedad',6,'p_propiedad','yacc.py',98),
  ('propiedad -> XML_COMMENT tipo ID SEMICOLON','propiedad',4,'p_propiedad','yacc.py',99),
  ('metodo -> modificador tipo_main ID LPAREN parametros_main RPAREN LBRACE instrucciones RBRACE','metodo',9,'p_metodo_main','yacc.py',103),
  ('tipo_main -> VOID','tipo_main',1,'p_tipo_main','yacc.py',107),
  ('parametros_main -> tipo LBRACKET RBRACKET ID','parametros_main',4,'p_parametros_main','yacc.py',111),
  ('metodo -> modificador tipo ID LPAREN parametros RPAREN LBRACE instrucciones RBRACE','metodo',9,'p_metodo','yacc.py',114),
  ('metodo -> modificador tipo ID LPAREN tipo LBRACKET RBRACKET ID RPAREN LBRACE instrucciones RBRACE','metodo',12,'p_metodo','yacc.py',115),
  ('metodo -> XML_COMMENT modificador tipo ID LPAREN parametros RPAREN LBRACE instrucciones RBRACE','metodo',10,'p_metodo','yacc.py',116),
  ('metodo -> XML_COMMENT modificador tipo ID LPAREN tipo LBRACKET RBRACKET ID RPAREN LBRACE instrucciones RBRACE','metodo',13,'p_metodo','yacc.py',117),
  ('parametros -> parametro','parametros',1,'p_parametros','yacc.py',121),
  ('parametros -> parametros COMMA parametro','parametros',3,'p_parametros','yacc.py',122),
  ('parametros -> XML_COMMENT parametros','parametros',2,'p_parametros','yacc.py',123),
  ('parametros -> empty','parametros',1,'p_parametros','yacc.py',124),
  ('parametro -> tipo ID','parametro',2,'p_parametro','yacc.py',130),
  ('parametro -> tipo LBRACKET RBRACKET ID','parametro',4,'p_parametro','yacc.py',131),
  ('parametro -> tipo ID ASSIGN expresion','parametro',4,'p_parametro','yacc.py',132),
  ('parametro -> tipo LBRACKET RBRACKET ID ASSIGN expresion','parametro',6,'p_parametro','yacc.py',133),
  ('parametro -> XML_COMMENT tipo ID','parametro',3,'p_parametro','yacc.py',134),
  ('parametro -> XML_COMMENT tipo ID ASSIGN expresion','parametro',5,'p_parametro','yacc.py',135),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','yacc.py',143),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','yacc.py',144),
  ('instrucciones -> empty','instrucciones',1,'p_instrucciones','yacc.py',145),
  ('instruccion -> impresion','instruccion',1,'p_instruccion','yacc.py',149),
  ('instruccion -> llamada','instruccion',1,'p_instruccion','yacc.py',150),
  ('instruccion -> lectura','instruccion',1,'p_instruccion','yacc.py',151),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','yacc.py',152),
  ('instruccion -> control','instruccion',1,'p_instruccion','yacc.py',153),
  ('instruccion -> instruccion_return','instruccion',1,'p_instruccion','yacc.py',154),
  ('instruccion -> XML_COMMENT','instruccion',1,'p_instruccion','yacc.py',155),
  ('instruccion -> propiedad','instruccion',1,'p_instruccion','yacc.py',156),
  ('impresion -> ID DOT ID LPAREN expresion RPAREN SEMICOLON','impresion',7,'p_imprimir','yacc.py',160),
  ('impresion -> ID DOT ID LPAREN lista_expresiones RPAREN SEMICOLON','impresion',7,'p_imprimir','yacc.py',161),
  ('lista_expresiones -> expresion','lista_expresiones',1,'p_lista_expresiones','yacc.py',165),
  ('lista_expresiones -> lista_expresiones COMMA expresion','lista_expresiones',3,'p_lista_expresiones','yacc.py',166),
  ('lectura -> ID DOT ID LPAREN RPAREN SEMICOLON','lectura',6,'p_lectura','yacc.py',172),
  ('asignacion -> tipo ID ASSIGN expresion SEMICOLON','asignacion',5,'p_asignacion','yacc.py',176),
  ('asignacion -> tipo ID ASSIGN NEW ID LPAREN RPAREN SEMICOLON','asignacion',8,'p_asignacion','yacc.py',177),
  ('instruccion_return -> RETURN expresion SEMICOLON','instruccion_return',3,'p_instruccion_return','yacc.py',182),
  ('expresion -> expresion PLUS expresion','expresion',3,'p_expresion_aritmetica','yacc.py',189),
  ('expresion -> expresion MINUS expresion','expresion',3,'p_expresion_aritmetica','yacc.py',190),
  ('expresion -> expresion TIMES expresion','expresion',3,'p_expresion_aritmetica','yacc.py',191),
  ('expresion -> expresion DIVIDE expresion','expresion',3,'p_expresion_aritmetica','yacc.py',192),
  ('expresion -> DATE_LITERAL','expresion',1,'p_expresion_aritmetica','yacc.py',193),
  ('expresion -> DECIMAL_LITERAL','expresion',1,'p_expresion_aritmetica','yacc.py',194),
  ('expresion -> HEX_LITERAL','expresion',1,'p_expresion_aritmetica','yacc.py',195),
  ('expresion -> BIN_LITERAL','expresion',1,'p_expresion_aritmetica','yacc.py',196),
  ('expresion -> NUMBER','expresion',1,'p_expresion_aritmetica','yacc.py',197),
  ('expresion -> FLOAT_LITERAL','expresion',1,'p_expresion_aritmetica','yacc.py',198),
  ('expresion -> ID','expresion',1,'p_expresion_aritmetica','yacc.py',199),
  ('expresion -> STRING_LITERAL','expresion',1,'p_expresion_aritmetica','yacc.py',200),
  ('expresion -> TRUE_LITERAL','expresion',1,'p_expresion_aritmetica','yacc.py',201),
  ('expresion -> FALSE_LITERAL','expresion',1,'p_expresion_aritmetica','yacc.py',202),
  ('expresion -> CHAR_LITERAL','expresion',1,'p_expresion_aritmetica','yacc.py',203),
  ('expresion -> ID INCREMENT','expresion',2,'p_expresion_incremento','yacc.py',207),
  ('expresion -> ID DECREMENT','expresion',2,'p_expresion_incremento','yacc.py',208),
  ('condicion -> expresion GT expresion','condicion',3,'p_condicion_logica','yacc.py',213),
  ('condicion -> expresion LT expresion','condicion',3,'p_condicion_logica','yacc.py',214),
  ('condicion -> expresion GE expresion','condicion',3,'p_condicion_logica','yacc.py',215),
  ('condicion -> expresion LE expresion','condicion',3,'p_condicion_logica','yacc.py',216),
  ('condicion -> expresion EQUALS expresion','condicion',3,'p_condicion_logica','yacc.py',217),
  ('condicion -> expresion NOTEQUAL expresion','condicion',3,'p_condicion_logica','yacc.py',218),
  ('condicion -> condicion AND condicion','condicion',3,'p_condicion_logica','yacc.py',219),
  ('condicion -> condicion OR condicion','condicion',3,'p_condicion_logica','yacc.py',220),
  ('control -> IF LPAREN condicion RPAREN LBRACE instrucciones RBRACE','control',7,'p_control_if','yacc.py',224),
  ('control -> IF LPAREN condicion RPAREN LBRACE instrucciones RBRACE ELSE LBRACE instrucciones RBRACE','control',11,'p_control_if','yacc.py',225),
  ('enum_decl -> modificador ENUM ID LBRACE lista_identificadores RBRACE','enum_decl',6,'p_enum_decl','yacc.py',237),
  ('lista_identificadores -> ID','lista_identificadores',1,'p_lista_identificadores','yacc.py',242),
  ('lista_identificadores -> lista_identificadores COMMA ID','lista_identificadores',3,'p_lista_identificadores','yacc.py',243),
  ('struct_decl -> modificador STRUCT ID LBRACE cuerpo_clase RBRACE','struct_decl',6,'p_struct_decl','yacc.py',248),
  ('llamada -> ID DOT ID LPAREN lista_expresiones RPAREN SEMICOLON','llamada',7,'p_llamada','yacc.py',252),
  ('llamada -> ID DOT ID LPAREN RPAREN SEMICOLON','llamada',6,'p_llamada','yacc.py',253),
  ('control -> SWITCH LPAREN expresion RPAREN LBRACE lista_casos default_case RBRACE','control',8,'p_switch','yacc.py',260),
  ('lista_casos -> lista_casos caso','lista_casos',2,'p_lista_casos','yacc.py',264),
  ('lista_casos -> caso','lista_casos',1,'p_lista_casos','yacc.py',265),
  ('caso -> CASE expresion COLON instrucciones BREAK SEMICOLON','caso',6,'p_caso','yacc.py',269),
  ('default_case -> DEFAULT COLON instrucciones BREAK SEMICOLON','default_case',5,'p_default_case','yacc.py',273),
  ('default_case -> empty','default_case',1,'p_default_case','yacc.py',274),
  ('control -> FOR LPAREN tipo ID ASSIGN expresion SEMICOLON condicion SEMICOLON expresion RPAREN LBRACE instrucciones RBRACE','control',14,'p_for','yacc.py',279),
  ('instruccion -> CONTINUE SEMICOLON','instruccion',2,'p_instruccion_continue','yacc.py',284),
  ('instruccion -> BREAK SEMICOLON','instruccion',2,'p_instruccion_break','yacc.py',289),
  ('tipo -> INT','tipo',1,'p_tipo','yacc.py',298),
  ('tipo -> FLOAT','tipo',1,'p_tipo','yacc.py',299),
  ('tipo -> STRING','tipo',1,'p_tipo','yacc.py',300),
  ('tipo -> CHAR','tipo',1,'p_tipo','yacc.py',301),
  ('tipo -> BOOL','tipo',1,'p_tipo','yacc.py',302),
  ('tipo -> VOID','tipo',1,'p_tipo','yacc.py',303),
  ('tipo -> ID','tipo',1,'p_tipo','yacc.py',304),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',308),
]
